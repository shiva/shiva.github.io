<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shiv.me </title>
    <link>/tags/bash/</link>
    <language>en-us</language>
    <author>Shiva Velmurugan</author>
    <rights>(C) 2016</rights>
    <updated>2014-03-31 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Getting git status on multiple directories</title>
          <link>/2014/03/31/getting-git-status-on-multiple-directories/</link>
          <pubDate>Mon, 31 Mar 2014 00:00:00 UTC</pubDate>
          <author>Shiva Velmurugan</author>
          <guid>/2014/03/31/getting-git-status-on-multiple-directories/</guid>
          <description>&lt;p&gt;At any given time, I have a handful of git repositories that I work on. While typing in the command-line is great, it getting tiring when you have a several directories that you have to manually change to and check. The &amp;ldquo;git status&amp;rdquo; command can take the git repo and the working directory as input. That, and a little bash programming to the rescue.
The following command, executes git status in every subdirectory that is a git repository.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for d in `find . -name &amp;quot;.git&amp;quot;`; do 
echo &amp;quot;processing $d ...&amp;quot;; 
git --git-dir=$d --work-tree=$d/.. status; 
done
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    

  </channel>
</rss>
