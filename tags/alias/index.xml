<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shiv.me </title>
    <link>/tags/alias/</link>
    <language>en-us</language>
    <author>Shiva Velmurugan</author>
    <rights>(C) 2016</rights>
    <updated>2012-09-26 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Git: beautiful git logs and listing files in a commit</title>
          <link>/2012/09/git-beautiful-git-logs-and-listing-files-in-a-commit/</link>
          <pubDate>Wed, 26 Sep 2012 00:00:00 UTC</pubDate>
          <author>Shiva Velmurugan</author>
          <guid>/2012/09/git-beautiful-git-logs-and-listing-files-in-a-commit/</guid>
          <description>&lt;p&gt;Working with git is fun. However, it is easy to get tired of the log list of parameters one has to use to very often. Git aliases are a great way to deal with this.&lt;/p&gt;

&lt;p&gt;For instance, the standard git log, it pretty much useless in any large project, where there are several hundred commits in a day. Most often, the commit you are looking for in probably several pages deep.&lt;/p&gt;

&lt;p&gt;The following is from the latest &lt;a href=&#34;https://github.com/torvalds/linux&#34; title=&#34;linux by Linus&#34;&gt;linux.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, git log has options one can use, that make the output look like this:&lt;/p&gt;

&lt;p&gt;Another useful command is git show, with the &amp;ndash;name-only option. It displays the list of files in a particular commit.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
