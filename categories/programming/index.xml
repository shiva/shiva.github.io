<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Reflections</title>
    <link>http://blog.shiv.me/categories/programming/</link>
    <description>Recent content in programming on Reflections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Copyright 2016 &amp;copy; Shivanand Velmurugan</copyright>
    <lastBuildDate>Thu, 29 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.shiv.me/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Working with large C codebases</title>
      <link>http://blog.shiv.me/2016/12/29/working-with-large-c-codebases/</link>
      <pubDate>Thu, 29 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.shiv.me/2016/12/29/working-with-large-c-codebases/</guid>
      <description>Searching for symbols The product that I work on, has over 22 million lines of source &amp;ndash; most of it a nightmare. I use vim as my editor of choice 1. Both cscope and ctags (integrated into vim), allow me to quickly move between files and lookup definitions of symbols, and help in understanding the challenge-du-jour.
Throw in fuzzy find capabilities of the most awesome Ctrl+p plugin, and vim becomes the best &amp;lsquo;IDE&amp;rsquo; out there!</description>
    </item>
    
    <item>
      <title>Elixir - A crash course</title>
      <link>http://blog.shiv.me/2016/11/06/elixir-crash-course/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>http://blog.shiv.me/2016/11/06/elixir-crash-course/</guid>
      <description>These are notes from the official Elixir documentation. It a quick walk-through of the unique features in Elixir for someone coming from years of C &amp;mdash; a way for me to remember and use as a reference.
Summary  Types Operators Control Structures  Types Atoms Named contants with a value. true and false are atoms.
Strings  Supports unicode string natively! It&amp;rsquo;s about time. 1 You can concatenate strings using &amp;lt;&amp;gt;.</description>
    </item>
    
  </channel>
</rss>
